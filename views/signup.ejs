<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration Page</title>
    <script src="https://www.google.com/recaptcha/api.js" async defer></script>
    <style>
        /* Your existing CSS */
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100vw;
            height: 100vh;
            margin: 0;
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
        }

        .MainBody {
            border: 2px solid #ccc;
            border-radius: 10px;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            width: 40%;
            padding: 20px;
            background-color: #ffffff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .input-container {
            position: relative;
            margin: 20px 0;
            width: 100%;
        }

        .textbox {
            width: 100%;
            padding: 10px;
            font-size: 16px;
            border: 1px solid #ddd;
            border-radius: 5px;
            outline: none;
            transition: all 0.3s ease;
        }

        .textbox:focus {
            border-color: #007bff;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
        }

        .label {
            position: absolute;
            top: 50%;
            left: 10px;
            transform: translateY(-50%);
            background: #ffffff;
            padding: 0 5px;
            font-size: 16px;
            color: #aaa;
            transition: all 0.3s ease;
            pointer-events: none;
        }

        .textbox:focus+.label,
        .textbox:not(:placeholder-shown)+.label {
            top: -10px;
            font-size: 12px;
            color: #007bff;
        }

        button {
            padding: 10px 20px;
            font-size: 16px;
            color: #fff;
            background-color: #007bff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        button:hover {
            background-color: #0056b3;
        }

        .OTP {
            position: absolute;
            border: 2px solid #007bff;
            border-radius: 10px;
            padding: 20px;
            display: none;
            flex-direction: column;
            align-items: center;
            background-color: #ffffff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            width: 300px;
        }

        .OTP h1 {
            color: #333;
            font-size: 18px;
            margin-bottom: 10px;
        }

        .OTP h4 {
            color: #555;
            font-size: 14px;
            margin-bottom: 20px;
            text-align: center;
        }

        .OTP button {
            width: 100%;
            padding: 10px;
            font-size: 14px;
            margin: 10px;
            padding: 5px;
        }

        #info {
            text-align: center;
        }
    </style>
</head>

<body>
    <div class="MainBody">
        <h1>Registration Page</h1>
        <form id="register-form">
            <div class="input-container">
                <input type="text" name="fname" class="textbox" placeholder=" " required />
                <label class="label">First Name</label>
            </div>
            <div class="input-container">
                <input type="text" name="lname" class="textbox" placeholder=" " required />
                <label class="label">Last Name</label>
            </div>
            <div class="input-container">
                <input type="date" name="dob" class="textbox" placeholder=" " required />
                <label class="label">Date of Birth</label>
            </div>
            <div class="input-container">
                <input type="text" name="cnic" class="textbox" placeholder=" " required />
                <label class="label">CNIC</label>
            </div>
            <div class="input-container">
                <input type="text" name="nationality" class="textbox" placeholder=" " required />
                <label class="label">Nationality</label>
            </div>
            <div class="input-container">
                <select name="gender" class="textbox" required>
                    <option value="">Select Gender</option>
                    <option value="Male">Male</option>
                    <option value="Female">Female</option>
                    <option value="Other">Other</option>
                </select>
                <label class="label">Gender</label>
            </div>
            <div class="input-container">
                <input type="email" name="email" class="textbox" placeholder=" " required />
                <label class="label">Email</label>
            </div>
            <div class="input-container">
                <input type="password" name="password" class="textbox" placeholder=" " required />
                <label class="label">Password</label>
            </div>
            <div class="g-recaptcha" data-sitekey="your-recaptcha-site-key"></div>
            <button type="submit">Register</button>
        </form>

        <div class="OTP" id="otpver">
            <h1>OTP Verification</h1>
            <h4 id="info">Please Enter The OTP Sent To Your Registered Email</h4>
            <div class="input-container">
                <input type="text" name="otp" class="textbox" id="otpcode" placeholder=" " required />
                <label class="label">OTP Code</label>
            </div>
            <div id="otpbutt">
                <button id="closeOtp">Close</button>
                <button id="verifyOtp">Verify</button>
            </div>
        </div>
    </div>

    <script>
        document.getElementById("register-form").addEventListener("submit", async (event) => {
    event.preventDefault();

    const formData = new FormData(event.target);
    const payload = {
        fname: formData.get("fname"),
        lname: formData.get("lname"),
        dob: formData.get("dob"),
        cnic: formData.get("cnic"),
        nationality: formData.get("nationality"),
        gender: formData.get("gender"),
        email: formData.get("email"),
        password: formData.get("password"),
    };

    try {
        document.getElementById("otpver").style.display = "flex";
        const emailResponse = await fetch("http://localhost:3000/send-email", {
            method: "POST",
            credentials: "include",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({ email1: formData.get("email"), fname: formData.get("fname"), lname: formData.get("lname") }),
        });

        if (emailResponse.ok) {
            console.log("Email sent successfully!");
        } else {
            console.error("Error sending email. Please enter a valid email.");
            return;
        }
    } catch (error) {
        console.error("Error during registration:", error);
        alert("An error occurred. Please try again.");
        return;
    }

    // Now handle OTP verification only after sending the email
    document.getElementById("verifyOtp").addEventListener("click", async () => {
        const otp = document.getElementById("otpcode").value;

        if (!otp) {
            alert("Please enter the OTP.");
            return;
        }

        try {
            const response = await fetch("http://localhost:3000/verify-otp", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({ otp }),
            });

            const result = await response.json();

            if (response.ok) {
                alert("OTP verified successfully! Proceeding with registration.");

                // Only now make the registration API call
                const registrationResponse = await fetch("http://localhost:3000/register", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify(payload),
                });

                if (registrationResponse.ok) {
                    const data = await registrationResponse.json();
                    console.log(data); // You can log the response for debugging
                    localStorage.setItem('authToken', data.token); // Assuming token is returned
                    window.location.replace("http://127.0.0.1:3000/views/index.ejs");
                } else {
                    const result = await registrationResponse.json();
                    alert(result.message || "Registration failed. Please try again.");
                }
            } else {
                alert(result.message || "Failed to verify OTP. Please try again.");
            }
        } catch (error) {
            console.error("Error verifying OTP:", error);
            alert("An error occurred. Please try again.");
        }
    });
});

// Close OTP popup
document.getElementById("closeOtp").addEventListener("click", () => {
    document.getElementById("otpver").style.display = "none";
});

    </script>
</body>

</html>
